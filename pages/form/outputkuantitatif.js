import React, { useState, useEffect, useRef } from 'react';
import { GoogleSpreadsheet } from 'google-spreadsheet';
import Swal from 'sweetalert2';
import Loader from '../../components/Loader';
import { useRouter } from 'next/router';
import Head from 'next/head';
import NavSoal from '../../components/NavSoal';
import { Radio } from 'antd';
import Timer from '../../components/Timer';
import CardHasil from '../../components/CardHasil';
import { runFireworks } from '../../libs/utils';

// Config variables
const SPREADSHEET_ID = process.env.NEXT_PUBLIC_SPREADSHEET_ID;
// sheet jawaban
const SHEET_ID3 = process.env.NEXT_PUBLIC_SHEET_ID3;
// sheet database siswa
const SHEET_ID2 = process.env.NEXT_PUBLIC_SHEET_ID2;
const GOOGLE_CLIENT_EMAIL = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_EMAIL;
const GOOGLE_SERVICE_PRIVATE_KEY =
  process.env.NEXT_PUBLIC_GOOGLE_SERVICE_PRIVATE_KEY;
// console.log(SHEET_ID3);
// const [storedNisn, setStorageNisn] = useState('');
const ContactForm = ({ sheetdata }) => {
  // console.log(sheetdata);

  // console.log(sheetdata[0][1]);

  const [storedNisn, setStorageNisn] = useState('');
  const [storedName, setStorageName] = useState('Student');
  const [tipeSoal, setTipeSoal] = useState('');
  // console.log(storedName);
  // console.log(storedNisn);
  const filteredData = sheetdata.map((item) => item);
  const filteredNisn = filteredData.filter((item) => item[1] === storedNisn);
  // console.log(filteredNisn);
  useEffect(() => {
    runFireworks();
    // cek apakah ada name di local storage
    const storedName = localStorage.getItem('name');
    const storedNisn = localStorage.getItem('nisn');
    const tipeSoal = localStorage.getItem('tipeSoal');

    if (!storedName) {
      router.push('/form/login');
    } else {
      setStorageName(storedName);
      setStorageNisn(storedNisn);
      setTipeSoal(tipeSoal);
    }
    // sheetdata.forEach((index) => {
    //   // cek apakah sudah ada nisn dan nama di local storage
    //   const storedNisn = localStorage.getItem('nisn');

    //   if (storedNisn) {
    //     setForm({ ...form, nisn: storedNisn });
    //   }
    //   const savedValue = localStorage.getItem(`group${index[0]}`);

    //   // console.log(index[0]);
    //   // console.log(localStorage.key(index));
    //   if (savedValue) {
    //     setSelectedValues((selectedValues) => ({
    //       ...selectedValues,
    //       [`group${index[0]}`]: savedValue,
    //     }));
    //   }
    //   // berisi jawaban tersimpan
    //   // console.log(savedValue);
    // });
  }, []);
  const [errorMessage, setErrorMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [selectedValues, setSelectedValues] = useState({});
  const router = useRouter();
  const [form, setForm] = useState({
    nisn: '',
  });

  // cek nisn

  return (
    <div>
      <Head>
        <title>ANALISIS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="max-w-xl mb-2 flex items-center justify-center m-auto p-4 bg-gray-300 text-gray-900">
          <div className="mb-12">
            <div>
              <CardHasil
                sheetdata={sheetdata}
                filteredNisn={filteredNisn}
                storedName={storedName}
                storedNisn={storedNisn}
                tipeSoal={tipeSoal}
              />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default ContactForm;

// ambil data soal
export async function getServerSideProps() {
  const req = await fetch(
    'https://ruleslb3r.vercel.app/api/analisiskuantitatif'
  );
  const res = await req.json();

  return {
    props: {
      sheetdata: res.data,
    },
  };
}
